const toggleAttach = (e) => {
  // select the span with reliable identification like data-*
  const clipNode = document.querySelectorAll('.TbtXF')[e];
  // take its element, i.e. the button itself
  const clipButtonNode = clipNode.parentNode;
  // extract the current offset position relative to the document
  // more info here https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect
  // we can use this for filling in the non-0 screenX and screenY
  const clipButtonNodeClientRect = clipButtonNode.getBoundingClientRect();

  clipButtonNode.dispatchEvent(new MouseEvent("mousedown", {
    bubbles: true,
    cancelable: true,
    screenX: clipButtonNodeClientRect.x,
    screenY: clipButtonNodeClientRect.y
  }));
}

for (var i = 0; i < document.querySelectorAll('.TbtXF').length; i++) {
	  console.log('fakeClick: ',i);
if(document.querySelectorAll('.TbtXF')[i].innerHTML.includes('ابدأ')==true){
toggleAttach(i)
setTimeout(function(){

window.InputEvent = window.Event || window.InputEvent;
var event = new InputEvent('input', {bubbles: true});

var textbox = document.querySelector("#main > footer > div.vR1LG._3wXwX.copyable-area > div._2A8P4 > div > div._2_1wd.copyable-text.selectable-text")
function replay (e){ 
textbox.innerHTML = e ;
textbox.dispatchEvent(event);
document.getElementsByClassName("_1E0Oz")[0].click() ; }

var items;
 var resive;
  var msg_length;
var open=1;
setTimeout(function(){
 items =document.querySelectorAll(".copyable-text");
 // var myTypedText = items[items.length-1];
 // receved text
  resive = items[items.length-2];
  // msg length
  msg_length = resive.textContent.length;

replay("hi")},2000)
})}}
